{"version":3,"sources":["Home.js","App.js","registerServiceWorker.js","index.js"],"names":["Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","editorState","setState","handleKeyCommand","command","newState","RichUtils","state","onUnderlineClick","toggleInlineStyle","onToggleCode","toggleCode","EditorState","createEmpty","react_default","a","createElement","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","style","float","backgroundColor","placeholder","height","padding","onClick","Draft","Component","API_URL","socket","io","App","user","disabled","popup","localStorage","setItem","_this2","on","close","_this3","check","setInterval","closed","undefined","clearInterval","left","window","innerWidth","width","top","innerHeight","url","concat","open","openPopup","checkPopup","name","src_Home","startAuth","bind","borderRadius","src","alt","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","App_App","document","getElementById","addEventListener","process","URL","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c94415f5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Editor, EditorState, RichUtils } from 'draft-js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      editorState: EditorState.createEmpty(),\n    };\n  }\n\n  onChange = (editorState) => {\n    this.setState({ editorState });\n  };\n\n  handleKeyCommand = (command) => {\n    const newState = RichUtils.handleKeyCommand(this.state.editorState, command);\n\n    if (newState) {\n      this.onChange(newState);\n      return 'handled';\n    }\n\n    return 'not-handled';\n  }\n\n  onUnderlineClick = () => {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'UNDERLINE'));\n  }\n\n  onToggleCode = () => {\n    this.onChange(RichUtils.toggleCode(this.state.editorState));\n  }\n\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n          <div className=\"container\">\n            <a className=\"navbar-brand\">\n              <h1><i className=\"material-icons\">home\t</i> OutReach Assistant</h1>\n            </a>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n              <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\"><h4>John Smith</h4></a>\n                </li>\n              </ul>\n            </div>\n          </div>\n      \n        </nav>\n        <div className=\"container\">\n          <div className=\"card card-primary\">\n            <div className=\"card-header\">\n            \n              <i className=\"material-icons\" style={{float:'right'}}>fullscreen_exit\t</i>\n              <h2><i className=\"material-icons\">library_books\t</i> Campaigns</h2>\n            </div>\n            <div className=\"card-body\" style={{backgroundColor:'gray'}}>\n              <div className=\"container\" style={{backgroundColor:'#dcdcdc'}}>\n                <div className=\"row\">\n                  <div className=\"col-xl-3\"></div>\n                  <div className=\"col-xl-6\">\n                    <h1>Build a Campaign Message</h1>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col col-xl-4\">\n                      <div className=\"row\">\n                        <div className=\"col-6\">\n                          <div className='directory'>\n                            This is text1.\n                          </div>\n                        </div>\n                        <div className=\"col-6\">\n                          <div className='directory'>\n                            This is text2.\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col-6\">\n                          <div className='directory'>\n                            This is text3.\n                          </div>\n                        </div>\n                        <div className=\"col-6\">\n                          <div className='directory'>\n                            This is text4.\n                          </div>\n                        </div>\n                      </div>\n                  </div>\n                  <div className=\"col col-8\">\n                    <div className=\"mPanel\">\n                      <input className=\"form-control\" type=\"text\" placeholder=\"Subject\"/>\n                      <input className=\"form-control\" type=\"text\" placeholder=\"Recipients\"/>\n                      <div style={{height:'400px', padding:'2%'}}>\n                        +\n                      </div>\n                      <div className='row'>\n                        <div className='col-sm-3'>\n                          <button className=\"btn btn-primary bSend\" onClick={this.onToggleCode}>Send</button>\n                        </div>\n                          \n                        <div className='col-sm-9'>\n                          <div className='row' style={{float:'right'}}>Word Count: 9999</div><br/>\n                          <div className='row' style={{float:'right'}}>Points of Personalization: 9999</div>\n                        </div>\n                      </div>                      \n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"card-body\">\n              <Editor\n                editorState={this.state.editorState}\n                handleKeyCommand={this.handleKeyCommand}\n                onChange={this.onChange}\n              />\n            </div>\n          </div>\n          \n          \n        </div>\n      </div>\n      \n      \n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react'\nimport io from 'socket.io-client'\nimport './App.css'\nimport Home from './Home'\nconst API_URL = 'http://mobiledev0702.github.io/message' //'http://127.0.0.1:8080'\nconst socket = io(API_URL)\n\nexport default class App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      user: {},\n      disabled: ''\n    }\n    this.popup = null  \n    localStorage.setItem('isSigned', false)\n  }\n\n  componentDidMount() {\n    socket.on('user', user => {\n      this.popup.close()\n      this.setState({user})\n    })\n  }\n\n  checkPopup() {\n    const check = setInterval(() => {\n      const { popup } = this\n      if (!popup || popup.closed || popup.closed === undefined) {\n        clearInterval(check)\n        this.setState({ disabled: ''})\n      }\n    }, 1000)\n  }\n\n  openPopup() {\n    const width = 600, height = 600\n    const left = (window.innerWidth / 2) - (width / 2)\n    const top = (window.innerHeight / 2) - (height / 2)\n    \n    const url = `${API_URL}/twitter?socketId=${socket.id}`\n\n    return window.open(url, '',       \n      `toolbar=no, location=no, directories=no, status=no, menubar=no, \n      scrollbars=no, resizable=no, copyhistory=no, width=${width}, \n      height=${height}, top=${top}, left=${left}`\n    )\n  }\n\n  startAuth() {\n    if (!this.state.disabled) {  \n      this.popup = this.openPopup()  \n      this.checkPopup()\n      this.setState({disabled: 'disabled'})\n    }\n  }\n\n  closeCard() {\n    this.setState({user: {}})\n  }\n\n  render() {\n    const { name } = this.state.user\n    // const { name, photo } = this.state.user\n    // const { disabled } = this.state\n    \n    \n    name?localStorage.setItem(\"isSigned\", true):localStorage.setItem('isSigned', false);\n    \n\n    return (\n      <div className={'container'}>\n        {/* If there is a user, show the user */}\n        {/* Otherwise show the login button */}\n        {name\n        // localStorage.getItem('isSigned')\n          // ? <div className={'card'}>              \n          //     <img src={photo} alt={name} />\n          //     <FontAwesome\n          //       name={'times-circle'}\n          //       className={'close'}\n          //       onClick={this.closeCard.bind(this)}\n          //     />\n          //     <h4>{`@${name}`}</h4>\n          //   </div> \n          ? <Home user= {this.state.user}/>\n          : <div className={'button'}>\n              <button \n                type='button'\n                className='btn btn-lg'\n                onClick={this.startAuth.bind(this)} \n                style={{borderRadius: '50%'}}\n\n              ><img src={'./twitter.png'} style={{width:'200px'}} alt={name}/>\n              </button>\n              \n            </div>\n        }\n      </div>\n    )\n  }\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}